### Consensus Transcriptomic Subtypes of Sepsis script - Scicluna

library(mixOmics)
library(limma)
library(sva)
library(pheatmap)
library(RColorBrewer)
library(MCL)
library(jaccard)
library(cluster)
library(ggplot2)



### MARS, GAinS and Stanford subtype assignments binary heatmap

dat.1 <- read.csv("Mars_SRS_Stanford_assigned.csv", row.names=1, stringsAsFactors=TRUE)
dat.1m <- data.matrix(dat.1)
png("binary_heatmap_consensus_overlap.png",height=600,width=2000,res=300)
pheatmap(t(dat.1m), 
         cluster_rows = FALSE, 
         cluster_cols = TRUE,  # clustering on columns unless you want it
         color = c("lightgrey", "midnightblue"),  # White for 0, Blue for 1
         labels_row = colnames(dat.1m),
         labels_col = " ",
         display_numbers = FALSE, 
         fontsize = 10,
         fontsize_row = 8,
         fontsize_col = 10,
         clustering_distance_rows = "binary",
         legend = FALSE,
         treeheight_row = 0)
dev.off()

### MCL clustering of jaccard distances

dat.mcl <- read.table("mcl_jac_dist.txt",header=T)

mcl.1 <- mcl(x=dat.mcl, addLoops=T, allow1=F, inflation=1)
mcl.2 <- mcl(x=dat.mcl, addLoops=T, allow1=F, inflation=2)
mcl.3 <- mcl(x=dat.mcl, addLoops=T, allow1=F, inflation=3)
mcl.4 <- mcl(x=dat.mcl, addLoops=T, allow1=F, inflation=4)
mcl.5 <- mcl(x=dat.mcl, addLoops=T, allow1=F, inflation=5)
mcl.6 <- mcl(x=dat.mcl, addLoops=T, allow1=F, inflation=6)
mcl.7 <- mcl(x=dat.mcl, addLoops=T, allow1=F, inflation=7)
mcl.8 <- mcl(x=dat.mcl, addLoops=T, allow1=F, inflation=8)
mcl.9 <- mcl(x=dat.mcl, addLoops=T, allow1=F, inflation=9)
mcl.10 <- mcl(x=dat.mcl, addLoops=T, allow1=F, inflation=10)

### core samples classifier and random forest

exp.core.df <- read.csv("exp.core.df.txt", row.names=1, sep="", stringsAsFactors=TRUE)
exp.core.m <- data.matrix(exp.core.df)
core.cts <- read.csv("coreSamples_CTS_markup.csv", stringsAsFactors=TRUE)
cts <- as.factor(core.cts$CTS)
rf <- randomForest(cts~., data=t(exp.c.core), proximity=TRUE) 
print(rf)

#Call:
# randomForest(formula = cts ~ ., data = t(exp.core.m), proximity = TRUE) 
#               Type of random forest: classification
#                     Number of trees: 500
#No. of variables tried at each split: 4
#
#        OOB estimate of  error rate: 2.17%
#Confusion matrix:
#    1  2   3 class.error
#1 214  0   1 0.004651163
#2   2 77   2 0.049382716
#3   1  4 159 0.030487805

proximity_matrix <- rf$proximity
distance_rf <- as.dist(1 - proximity_matrix)
sil=silhouette(as.numeric(cts),dist=distance_rf) # silhouette function

pdf("silhouettes_COREsamples.pdf")
plot(sil,col=c("royalblue", "#B2DF8A", "orange"))
dev.off()


### Gene classifier heatmap

p.1 <- read.csv("CTS_assignments.csv", row.names=1, stringsAsFactors=TRUE)
exp.c <- read.delim("exp.c.txt", row.names=1, stringsAsFactors=TRUE)
exp.c.m <- data.matrix(exp.c)
ann_colors <- list(CTS=c("1"="royalblue", "2"="#B2DF8A", "3"="orange"))
#
png("CTS_Heatmap.png",height=1800,width=2600,res=300)
pheatmap(exp.c.m, color = colorRampPalette(rev(brewer.pal(n = 11, name = "PuOr")))(50), clustering_distance_rows = "correlation", cluster_rows = TRUE, cluster_cols = F, show_rownames = T, 
         show_colnames = F, annotation_legend = F, annotation_col = p.1, annotation_colors = ann_colors, scale="row", treeheight_row = 0)
dev.off()
#

# Assign VANISH samples to CTS

exp.vanish <- read.delim("vn.anno.2.txt", row.names=1, stringsAsFactors=TRUE)
exp.vanish.c <- exp.vanish[rownames(g.class),]

pred_probs <- predict(rf, t(vanish.class), type = "prob")

# Display the posterior probabilities
head(pred_probs)
pred_probs <- as.data.frame(pred_probs)
pred_probs$chipID <- rownames(pred_probs)
pred_pr
write.table(pred_probs,file="posterior_probabilities_ALL.txt")





####
#### CTS association to clinical data
####


c.1$CTS <- as.factor(c.1$CTS)

png("SOFA_Violin_ALL.png",height=800,width=1000,res=300)
p <- ggplot(c.1, aes(x=as.factor(CTS), y=Peak_SOFA, fill=CTS)) +
  geom_violin(trim=FALSE)+
  scale_fill_manual(values=c("royalblue","#B2DF8A","orange"))+
  geom_boxplot(width=0.1)+
  ylim(0,30)+
  theme_classic()
p
dev.off()

png("SOFA_Violin_MARS.png",height=800,width=1000,res=300)
p <- ggplot(mars.c, aes(x=as.factor(CTS), y=Peak_SOFA, fill=CTS)) +
  geom_violin(trim=FALSE)+
  scale_fill_manual(values=c("royalblue","#B2DF8A","orange"))+
  geom_boxplot(width=0.1)+
  ylim(0,30)+
  theme_classic()
p
dev.off()

png("SOFA_Violin_GAINS.png",height=800,width=1000,res=300)
p <- ggplot(gains.c, aes(x=as.factor(CTS), y=Peak_SOFA, fill=CTS)) +
  geom_violin(trim=FALSE)+
  scale_fill_manual(values=c("royalblue","#B2DF8A","orange"))+
  geom_boxplot(width=0.1)+
  ylim(0,30)+
  theme_classic()
p
dev.off()


